queueonteleport([[loadstring(game:HttpGet('https://raw.githubusercontent.com/randy-rash/lua-files/refs/heads/main/asdaw1'))()]])

local Services = function(Name)
    return cloneref(game:GetService(Name))
end

local Players = Services('Players')
local RunService = Services('RunService')
local HttpService = Services('HttpService')
local TextChatService = Services('TextChatService')
local TeleportService = Services('TeleportService')
local ReplicatedStorage = Services('ReplicatedStorage')

local ServerHop = function()
    local Success, ReqResult = pcall(function()
        return game:HttpGet(
            'https://games.roblox.com/v1/games/'.. game.PlaceId ..'/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true',
            true 
        )
    end)

    if not Success then
        warn('Request failed', ReqResult)
        return false
    end

    if ReqResult == '{"errors":[{"code":0,"message":"Too many requests"}]}' then
        warn('Rate limited, waiting 30 seconds...')
        task.wait(30)
        return false
    end

    if not ReqResult or ReqResult == '' then
        warn('Empty response')
        return false
    end

    local Success, Body = pcall(HttpService.JSONDecode, HttpService, ReqResult)
    if not Success or not Body or not Body.data then
        warn('JSON decode failed')
        return false
    end

    local Servers = {}
    for _, Server in Body.data do
        if typeof(Server) == 'table' and 
		Server.id and 
		Server.playing and 
		Server.maxPlayers then
            local playing = tonumber(Server.playing)
            local maxPlayers = tonumber(Server.maxPlayers)
            if playing and 
			maxPlayers and 
			playing + 3 < maxPlayers and 
			tostring(Server.id) ~= game.JobId then
                table.insert(Servers, Server.id)
            end
        end
    end

    if #Servers > 0 then
        local SelectedServer = Servers[math.random(1, #Servers)]
        print('Teleporting to server:', SelectedServer)
        task.wait(1)
        TeleportService:TeleportToPlaceInstance(game.PlaceId, SelectedServer, LocalPlayer)
        return true
    else
        warn('No valid servers found.')
        return false
    end
end

local Timer = 0
local Loaded = function()
	if game:IsLoaded() and game.Players.LocalPlayer then
		return true
	end	
	return false
end	

local Connection
Connection = RunService.RenderStepped:Connect(function(Delta)
	Timer += Delta

	if Timer >= 10 then
		Connection:Disconnect()
		if not Loaded() then
			ServerHop()
		end
	elseif Loaded() then
		Connection:Disconnect()
	end	
end)	

if not Loaded() then 
	repeat task.wait() until Loaded()
end

task.wait(5)

workspace.FallenPartsDestroyHeight = 0/0 -- don't even think about it girl

local LocalPlayer = Players.LocalPlayer
local LocalCharacter = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local LocalHumanoidRootPart = LocalCharacter:WaitForChild('HumanoidRootPart')

if game.PlaceId == 5913858916 then
-- idfk anymore
repeat task.wait() until LocalPlayer:FindFirstChild('PlayerScripts')
local PlayerScripts = LocalPlayer.PlayerScripts

repeat task.wait() until PlayerScripts:FindFirstChild('ChatScript')
local ChatScript = PlayerScripts.ChatScript

repeat task.wait() until ChatScript:FindFirstChild('ChatMain')
local ChatMain = require(ChatScript.ChatMain)

repeat task.wait() until ChatMain.MessagePosted

-- ts is self explanatory
local Commands = {
	'size me 2',
	'name me '.. string.rep('burying ', 25),
	'color me red',
	'hat me 24114402',
	'hat me 305888394',
	'hat me 33070696',
	'hat me 24112667',
	'sparkles',
	'fire'
}

task.spawn(function ()
	for _, Command in Commands do
		ChatMain.MessagePosted.fire('All', '/'.. tostring(Command))
		task.wait(0.8)
	end
end)
end

--all of these are in seconds
local TimePerPlayer = 5
local ChatTime = 2

local ServerHopTime = 15
local RetryCooldown = 10

setfpscap(30)

for _,Seat in workspace:GetDescendants() do
	if Seat:IsA('Seat') then
		Seat:Destroy()
	end	
end

local Messages = { 
    "join /burying we're a new hangout game",
	'join /burying if ur cool',
	"bored? join /burying we're making a hangout game",
	'bro what is happening in /burying',
	'_______________________________________________________________________________________________________________________________________________________________________________',
	'LOOL BRO WHAT IS HAPPENING IN /burying',
	'new hangout game /burying',
	'egirls at burying /burying',
	'join this for gws /burying',
	'nitro gws /burying',
	'join for a better hangout game /burying',
	'lonely? join /burying'
}

task.spawn(function()
    task.wait(ServerHopTime)

    while true do
        print('Shop')
        local was_successful = ServerHop()

        if was_successful then
            break
        else
            warn('Server hop failed. Retrying in ' .. RetryCooldown .. ' seconds.')
            task.wait(RetryCooldown)
        end
    end
end)

local Chat = function(Message)
    local Msg = tostring(Message)
    if TextChatService.ChatVersion ~= Enum.ChatVersion.LegacyChatService then
        TextChatService.TextChannels.RBXGeneral:SendAsync(Msg)
    else
        local ChatEvents = ReplicatedStorage:FindFirstChild('DefaultChatSystemChatEvents')
        if ChatEvents and ChatEvents:FindFirstChild('SayMessageRequest') then
            ChatEvents.SayMessageRequest:FireServer(Msg, 'All')
        end
    end
end

local LastMsg = ''
task.spawn(function()
    while true do
		local RandomMsg

		repeat
			RandomMsg = Messages[math.random(1, #Messages)]
		until RandomMsg ~= LastMsg

		Chat(RandomMsg)
		LastMsg = RandomMsg

		task.wait(ChatTime)
    end
end)

local PlayerQueue = {}
local CurrentIndex = 1
local TrackStartTime = tick()

RunService.RenderStepped:Connect(function()
    if #PlayerQueue == 0 then
        PlayerQueue = Players:GetPlayers()
        for i = #PlayerQueue, 1, -1 do
            if PlayerQueue[i] == LocalPlayer then
                table.remove(PlayerQueue, i)
                break
            end
        end
        CurrentIndex = 1
        TrackStartTime = tick()
        return
    end

    local CurrentPlayer = PlayerQueue[CurrentIndex]
    if not CurrentPlayer then return end

    local Character = CurrentPlayer.Character
    local HumanoidRootPart = Character and Character:FindFirstChild('HumanoidRootPart')
    local Humanoid = Character and Character:FindFirstChildOfClass('Humanoid')

    if not Character or not Humanoid or Humanoid.Health <= 0 or not HumanoidRootPart then
        CurrentIndex += 1
        TrackStartTime = tick()
        if CurrentIndex > #PlayerQueue then
            PlayerQueue = {}
        end
        return
    end

    LocalHumanoidRootPart.CFrame = HumanoidRootPart.CFrame * CFrame.Angles(math.random() * math.pi*2, math.random() * math.pi*2, math.random() * math.pi*2)

    if tick() - TrackStartTime >= TimePerPlayer or HumanoidRootPart.Velocity.Magnitude > 500 then
        CurrentIndex += 1
        TrackStartTime = tick()

        if CurrentIndex > #PlayerQueue then
            PlayerQueue = {}
        end
    end
end)
